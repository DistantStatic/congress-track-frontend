{"version":3,"sources":["BillModal.js","MemberModal.js","App.js","reportWebVitals.js","index.js"],"names":["BillModal","props","truncate","str","length","substring","render","toggle","Modal","isOpen","ModalHeader","state","currentBill","bill_id","toUpperCase","active","ModalBody","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","title","introduced_date","latest_major_action_date","latest_major_action","sponsor_title","sponsor","cosponsors","cosponsors_by_party","D","R","ModalFooter","Button","color","href","congressdotgov_url","onClick","Component","MemberModal","makeRoleList","rlist","ret","forEach","entry","index","push","scope","congress","chamber","bills_sponsored","bills_cosponsored","total_votes","missed_votes_pct","total_present","votes_with_party_pct","votes_against_party_pct","makeCommitteeList","clist","console","log","name","className","currentMember","roles","party","first_name","last_name","leadership_role","Table","committees","List","url","target","facebook_account","twitter_account","youtube_account","BASE_URL","process","App","componentDidMount","getSenateMemberData","getHouseMemberData","getBillData","setActiveMember","member","getDetailedMemberData","id","setActiveBill","bill","getDetailedBillData","bill_slug","axios","method","data","then","response","setState","senateMembers","results","members","houseMembers","bills","mlink","memberModal","activeMember","blink","billModal","activeBill","renderBills","billList","toRender","Card","sponsor_party","CardTitle","short_title","CardBody","sponsor_name","CardFooter","bind","renderCongressMembers","memberList","missed_votes","next_election","office","phone","displaySenate","pages","house","senate","displayHouse","displayBills","dataDecider","toggleBillModal","toggleMemberModal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35b2eee0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    ListGroup,\n    ListGroupItem,\n    ListGroupItemHeading,\n    ListGroupItemText\n} from \"reactstrap\";\n\nexport default class BillModal extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            currentBill: {\n                ...props.currentBill\n            },\n        }\n    }\n    truncate = (str) =>{\n        return str.length > 120 ? str.substring(0, 117) + \"...\" : str;\n    }\n\n    render = () => {\n        const {toggle} = this.props\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle}>\n                    {this.state.currentBill.bill_id.toUpperCase() + \" | \" + (this.state.currentBill.active ? \"Active\" : \"Inactive\")}\n                </ModalHeader>\n                <ModalBody>\n                    <ListGroup>\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Title: </ListGroupItemHeading>\n                            <ListGroupItemText>{this.state.currentBill.title}</ListGroupItemText>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Important Dates: </ListGroupItemHeading> \n                            <ListGroupItemText><i>Introduced: </i>{this.state.currentBill.introduced_date}</ListGroupItemText>\n                            <ListGroupItemText><i>Lastest Action: </i>{this.state.currentBill.latest_major_action_date}</ListGroupItemText>\n                            <ListGroupItemText>{this.state.currentBill.latest_major_action}</ListGroupItemText>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Sponsor(s): </ListGroupItemHeading>\n                            <ListGroupItemText>{this.state.currentBill.sponsor_title + \" \" + this.state.currentBill.sponsor + \" + \" + this.state.currentBill.cosponsors}</ListGroupItemText>\n                            { this.state.currentBill.cosponsors > 0 ? (\n                               \"D: \" + (this.state.currentBill.cosponsors_by_party.D > 0 ? (this.state.currentBill.cosponsors_by_party.D): \"0\") +  \n                               \" | \" + \n                               \"R: \" + (this.state.currentBill.cosponsors_by_party.R > 0 ? (this.state.currentBill.cosponsors_by_party.R): \"0\"))\n                               : null \n                            }\n                        </ListGroupItem>\n                    </ListGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" href={this.state.currentBill.congressdotgov_url}>\n                        Go to bill page\n                    </Button>\n                    <Button onClick={toggle}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {\n    List,\n    Table,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    ListGroup,\n    ListGroupItem,\n    ListGroupItemHeading,\n    ListGroupItemText\n} from \"reactstrap\";\n\nexport default class MemberModal extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            currentMember: {\n                ...props.currentMember\n            },\n        }\n    }\n\n    makeRoleList = (rlist) => {\n        let ret = []\n        rlist.forEach((entry, index) => {\n            ret.push(<tr>\n                <th scope=\"row\">{entry.congress}</th>\n                <td>{entry.chamber}</td>\n                <td>{entry.bills_sponsored}</td>\n                <td>{entry.bills_cosponsored}</td>\n                <td>{entry.total_votes}</td>\n                <td>{entry.missed_votes_pct + \"%\"}</td>\n                <td>{entry.total_present}</td>\n                <td>{entry.votes_with_party_pct + \"%\"}</td>\n                <td>{entry.votes_against_party_pct + \"%\"}</td>\n            </tr>)\n        })\n        return ret\n    }\n\n    makeCommitteeList = (clist) => {\n        let ret = []\n        clist.forEach((entry, index) => {\n            console.log(entry.name)\n            ret.push(\n                <li>{entry.name}</li>\n            )\n        })\n        return ret\n    }\n\n    render = () => {\n        const {toggle} = this.props\n        return (\n            <Modal className=\"member-modal\"isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle} className={this.state.currentMember.roles[0].party + \"party\"}>\n                    {this.state.currentMember.roles[0].title + \" \" + this.state.currentMember.first_name + \" \" + this.state.currentMember.last_name + \" | \" + this.state.currentMember.roles[0].party + \" - \" + this.state.currentMember.roles[0].state}\n                </ModalHeader>\n                <ModalBody>\n                    <ListGroup>\n                        {this.state.currentMember.roles[0].leadership_role != null ? \n                        <ListGroupItem>\n                            <ListGroupItemHeading>{this.state.currentMember.roles[0].leadership_role}</ListGroupItemHeading>\n                        </ListGroupItem>\n                        : null}\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Actions in congress: </ListGroupItemHeading>\n                            <div className=\"holds-table\">\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>Congress #</th>\n                                            <th>Chamber</th>\n                                            <th>Bills Sponsored</th>\n                                            <th>Bills Cosponsored</th>\n                                            <th>Total Votes</th>\n                                            <th>Missed Votes %</th>\n                                            <th>Present Votes</th>\n                                            <th>Votes With Party %</th>\n                                            <th>Votes Against Party %</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.makeRoleList(this.state.currentMember.roles)}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </ListGroupItem>\n                        {this.state.currentMember.roles[0].committees.length > 0 ? <ListGroupItem>\n                            <ListGroupItemHeading>Committees: </ListGroupItemHeading>\n                            <List>\n                                {this.makeCommitteeList(this.state.currentMember.roles[0].committees)}\n                            </List>\n                        </ListGroupItem> : null}\n                    </ListGroup>\n                </ModalBody>\n                <ModalFooter>\n                    {this.state.currentMember.url != null ? <Button color=\"secondary\" href={this.state.currentMember.url} target=\"_blank\">Gov Page</Button> : null}\n                    {this.state.currentMember.facebook_account != null ? <Button color=\"primary\" href={\"https://www.facebook.com/\" + this.state.currentMember.facebook_account} target=\"_blank\">Facebook</Button> : null}\n                    {this.state.currentMember.twitter_account != null ? <Button color=\"info\" href={\"https://www.twitter.com/\" + this.state.currentMember.twitter_account} target=\"_blank\">Twitter</Button> : null}\n                    {this.state.currentMember.youtube_account != null ? <Button color=\"danger\" href={\"https://www.youtube.com/\" + this.state.currentMember.youtube_account} target=\"_blank\">YouTube</Button> : null}\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}","import './App.css';\nimport { Component } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BillModal from './BillModal';\nimport MemberModal from './MemberModal';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nexport default class App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      senateMembers: [],\n      houseMembers: [],\n      bills: [],\n      pages: {\n        senate: true,\n        house: false,\n        bills: false,\n      },\n      activeMember: {},\n      activeBill: {},\n      billModal: false,\n      memberModal: false,\n    }\n  }\n\n  componentDidMount = () => {\n    this.getSenateMemberData();\n    this.getHouseMemberData();\n    this.getBillData();\n  }\n\n  truncate = (str) =>{\n    return str.length > 60 ? str.substring(0, 57) + \"...\" : str;\n}\n\n  setActiveMember = (member) => {\n    console.log(member);\n    this.getDetailedMemberData(member.id)\n  }\n\n  setActiveBill = (bill) => {\n    this.getDetailedBillData(bill.bill_slug)\n  }\n\n  getSenateMemberData = () => {\n    axios({\n      method: 'get', //you can set what request you want to be\n      url: BASE_URL + '/api/senate',\n      data: {},\n    }).then((response) =>{\n        this.setState({senateMembers: response.data.results[0].members})\n    })\n  }\n\n  getHouseMemberData = () => {\n    axios({\n      method: 'get', //you can set what request you want to be\n      url: BASE_URL + '/api/house',\n      data: {},\n    }).then((response) =>{\n        this.setState({houseMembers: response.data.results[0].members})\n    })\n  }\n\n  getBillData = () => {\n    axios({\n      method: 'get', //you can set what request you want to be\n      url: BASE_URL + '/api/bills',\n      data: {},\n    }).then((response) =>{\n      console.log(response);\n      this.setState({bills: response.data.results[0].bills})\n      console.log(this.state.bills);\n    })\n  }\n\n  getDetailedMemberData = (mlink) => {\n    axios({\n      method: 'get', //you can set what request you want to be\n      url: BASE_URL + '/api/member/' + mlink,\n      data: {},\n    }).then((response) =>{\n        this.setState({memberModal: true, activeMember: response.data.results[0]})\n        console.log(\"HERE\");\n        console.log(this.state.activeMember)\n    })\n  }\n\n  getDetailedBillData = (blink) => {\n    axios({\n      method: 'get', //you can set what request you want to be\n      url: BASE_URL + '/api/bills/' + blink,\n      data: {},\n    }).then((response) =>{\n        this.setState({billModal: true, activeBill: response.data.results[0]})\n        console.log(\"HERE\");\n        console.log(this.state.activeBill)\n    })\n  }\n\n  renderBills = (billList) => {\n    let toRender = [];\n    billList.forEach((bill) => {\n      toRender.push(\n        <div className=\"col-sm-4\">\n        <Card>\n          <div className={\"card-header \" + bill.sponsor_party + \"party\"}>{bill.bill_id.toUpperCase()}</div>\n          <CardTitle>\n            <h3>{this.truncate(bill.short_title)}</h3>\n          </CardTitle>            \n          <CardBody className=\"my-body\">\n            <div className=\"container\">\n            <h5 className=\"card-title\">{\"Sponsor(s): \" + bill.sponsor_name + \" + \" + bill.cosponsors}</h5>\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\"><a href={bill.congressdotgov_url}>{bill.congressdotgov_url}</a></li>\n              <li className=\"list-group-item\">{\"Last Major Action Date: \" + bill.latest_major_action_date}</li>\n            </ul>\n            </div>\n          </CardBody>\n          <CardFooter>\n            <Button onClick={this.setActiveBill.bind(this, bill)}>Find Out More</Button>\n          </CardFooter>\n        </Card>\n      </div>\n      )\n    })\n    return (toRender)\n  }\n\n  renderCongressMembers = (memberList) => {\n    let toRender = [];\n    memberList.forEach((member) => {\n      toRender.push(\n      <div className=\"col-sm-4\">\n        <Card>\n          <div className={\"card-header \" + member.party + \"party\"}>{member.title + \" | \" + member.party + \" - \" + member.state}</div>\n          <div className=\"card-title-section\">\n            <h1 className=\"card-title\">{member.first_name}</h1>\n            <h1 className=\"card-title\">{member.last_name}</h1>\n          </div>            \n          <CardBody className=\"my-body\">\n            <div className=\"container\">\n              <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>\n                  {\"Total Votes: \" + member.total_votes + \" | Missed: \" + member.missed_votes + \"(\" + member.missed_votes_pct + \"%)\"}\n                </ListGroupItem>\n                <ListGroupItem>\n                  {\"Next Election: \" + member.next_election}\n                </ListGroupItem>\n                <ListGroupItem>\n                  {\"Address: \" + member.office}\n                </ListGroupItem>\n                <ListGroupItem>\n                  {\"Phone: \" + member.phone}\n                </ListGroupItem>\n              </ListGroup>\n            </div>\n          </CardBody>\n          <CardFooter>\n            <Button onClick={this.setActiveMember.bind(this, member)}>Find Out More</Button>\n          </CardFooter>\n        </Card>\n      </div>\n      )\n    })\n    return toRender\n  }\n\n  displaySenate = () => {\n    this.setState({pages: {house: false, senate: true, bills: false}})\n  }\n  \n  displayHouse = () => {\n    this.setState({pages: {house: true, senate: false, bills: false}})\n  }\n\n  displayBills = () => {\n    this.setState({pages: {house: false, senate: false, bills: true}})\n  }\n\n  dataDecider = () => {\n    return (\n      <ul className=\"nav\">\n        <li className=\"nav-item\">\n          <a onClick={this.displaySenate} className={\"nav-link \" + ( this.state.pages.senate ? \"active\" : \"\")} href=\"#\">Senate</a>\n        </li>\n        <li className=\"nav-item\">\n          <a onClick={this.displayHouse} className={\"nav-link \" + ( this.state.pages.house ? \"active\" : \"\")} href=\"#\">House</a>\n        </li>\n        <li className=\"nav-item\">\n          <a onClick={this.displayBills} className={\"nav-link \" + ( this.state.pages.bills ? \"active\" : \"\")} href=\"#\">Bills</a>\n        </li>\n      </ul>\n    )\n  }\n\n  toggleBillModal = () => {\n    this.setState({billModal: !this.state.billModal})\n  }\n\n  toggleMemberModal = () => {\n    this.setState({memberModal: !this.state.memberModal})\n  }\n\n  render = () => {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1 className=\"title site-title\">TrackUS</h1>\n          <h5 className=\"title sub-title text-muted\">Keep track of your Representatives in Washington</h5>\n        </div>\n        <div className=\"container\">\n          <div className=\"main-display scroll-test row\">\n                {this.state.pages.senate ? this.renderCongressMembers(this.state.senateMembers) : \"\"}\n                {this.state.pages.house ? this.renderCongressMembers(this.state.houseMembers) : \"\"}\n                {this.state.pages.bills ? this.renderBills(this.state.bills) : \"\"}\n          </div>\n        </div>\n          <div className=\"my-footer\">\n            {this.dataDecider()}\n          </div>\n          { this.state.memberModal ? (<MemberModal currentMember={this.state.activeMember} toggle={this.toggleMemberModal}/>) : null }\n          { this.state.billModal ? (<BillModal currentBill={this.state.activeBill} toggle={this.toggleBillModal}/>) : null }\n      </div>\n\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}